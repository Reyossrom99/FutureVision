# Utiliza Ubuntu 22.04 como imagen base
FROM ubuntu:22.04

# Establece la variable de entorno para que las selecciones de zona horaria sean no interactivas
ENV DEBIAN_FRONTEND=noninteractive

# Actualiza e instala tzdata y herramientas necesarias
RUN apt-get update && apt-get install -y tzdata gnupg curl && \
    echo "Etc/UTC" > /etc/timezone && \
    dpkg-reconfigure -f noninteractive tzdata

# Instala software-properties-common para manejar repositorios
RUN apt-get install -y software-properties-common wget

# Instala software-properties-common para manejar repositorios
RUN apt-get install -y software-properties-common wget

RUN add-apt-repository ppa:deadsnakes/ppa && \
    apt-get update && apt-get install -y git

RUN apt install -y python3.8 python3.8-distutils python3.8-dev

RUN apt-get install -y python3-pip

RUN apt-get update && apt-get install -y ffmpeg libsm6 libxext6 netcat-openbsd postgresql-client  && rm -rf /var/lib/apt/lists/*

RUN python3.8 -m pip install --upgrade pip
# Establece el directorio de trabajo en el contenedor
WORKDIR /app
# Clone YOLOv7 repository
RUN git clone https://github.com/WongKinYiu/yolov7.git

# Ensure weights are downloaded (replace URL with actual weights URL if necessary)
RUN mkdir -p /app/yolov7/weights
RUN wget -O /app/yolov7/weights/yolov7.pt https://github.com/WongKinYiu/yolov7/releases/download/v0.1/yolov7.pt
COPY requirements.txt .

# Instala las dependencias del proyecto Django
RUN python3.8 -m pip install -r requirements.txt

# Copia el c칩digo de la aplicaci칩n al contenedor
#COPY src/ ./src/
#COPY datasets/ ./datasets/
#COPY proyects/ ./proyects/
#COPY yolov7 ./yolov7/
#COPY authentication/ ./authentication/
COPY . . 
COPY entrypoint.sh . 
RUN chmod +x entrypoint.sh
# Expone el puerto en el que se ejecutar치 la aplicaci칩n Django
EXPOSE 4000


